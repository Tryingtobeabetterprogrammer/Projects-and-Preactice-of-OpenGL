import pygame
from pygame.locals import *
from OpenGL.GL import *
from OpenGL.GLU import *


vertices= (
    (1, -1, -1),
    (1, 1, -1),
    (-1, 1, -1),
    (-1, -1, -1),
    (1, -1, 1),
    (1, 1, 1),
    (-1, -1, 1),
    (-1, 1, 1)
)
# maps how to connected vertices
edges_data = (
    (0,1),
    (0,3),
    (0,4),
    (2,1),
    (2,3),
    (2,7),
    (6,3),
    (6,4),
    (6,7),
    (5,1),
    (5,4),
    (5,7)
)
# rgb in float 0-1 values
colors = (
    (1,0,0), #r
    (0,1,0), #g
    (0,0,1), #b
    (0,1,0), #g
    (1,1,1), #wh
    (0,1,1), #cy
    (1,0,0), #r
    (0,1,0), #g
    (0,0,1), #b
    (1,0,0), #r
    (1,1,1), #wh
    (0,1,1), #cy
)
# surfaces are groups of vertices
# indexes to the vertices list
surfaces_data = (
    (0,1,2,3),
    (3,2,7,6),
    (6,7,5,4),
    (4,5,1,0),
    (1,5,7,2),
    (4,0,3,6)
)

def cube():
    glBegin(GL_QUADS)
    for surface in surfaces_data:
        x=0
        for vertex in surface:
            x+=1
            glColor3fv(colors[x])
            glVertex3fv(vertices[vertex])

    glEnd()
    
    glBegin(GL_LINES)
    for edge in edges_data:
        for vertex in edge:
            glVertex3fv(vertices[vertex])
    glEnd()

def main():
    pygame.init()
    display=(1280,720)
    pygame.display.set_mode(display,DOUBLEBUF|OPENGL)
    gluPerspective(45,(display[0]/display[1]),0.1,50.0)
    glTranslatef(0.0,0.0,-5)
    glRotatef(25,2,1,0)

    left=0
    right=0
    up=0
    down=0
    while True:
        if left:
            right,down,up=0,0,0
            glTranslatef(-0.1,0,0)
        if right:
            left,down,up=0,0,0
            glTranslatef(0.1,0,0)
        if up:
            left,down,right=0,0,0
            glTranslatef(0,0.1,0)
        if down:
            left,up,right=0,0,0
            glTranslatef(0,-.1,0)

        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                pygame.quit()
                quit()
            
            if event.type==pygame.KEYUP:
                if event.key==pygame.K_ESCAPE:
                    pygame.quit()
                    quit()
            if event.type==pygame.KEYDOWN:
                if event.key==pygame.K_LEFT:
                    left=1
                if event.key==pygame.K_RIGHT:
                    right=1
                if event.key==pygame.K_UP:
                    up=1
                if event.key==pygame.K_DOWN:
                    down=1
            if event.type==pygame.KEYUP:
                left=0
                right=0
                up=0
                down=0
            if event.type==pygame.MOUSEBUTTONDOWN:
                if event.button==4:
                    glTranslatef(0,0,0.1)
                if event.button==5:
                    glTranslatef(0,0,-0.1)


        glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT)

        cube()
        pygame.display.flip()

        pygame.time.wait(10)

main()
